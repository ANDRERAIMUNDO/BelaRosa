{"version":3,"sources":["webpack:///src/app/pages/pagamentocartao/pagamentocartao-routing.module.ts","webpack:///src/app/pages/pagamentocartao/pagamentocartao.module.ts","webpack:///src/app/pages/pagamentocartao/pagamentocartao.page.ts","webpack:///src/app/pages/pagamentocartao/pagamentocartao.page.scss","webpack:///src/app/pages/pagamentocartao/pagamentocartao.page.html"],"names":["routes","path","component","PagamentocartaoPage","PagamentocartaoPageRoutingModule","NgModule","imports","RouterModule","exports","PagamentocartaoPageModule","CommonModule","FormsModule","ReactiveFormsModule","IonicModule","declarations","formBuilder","router","route","loadingController","ngxMpService","cardService","data","payment","email","docType","docNumber","cardholderName","cardExpirationMonth","cardExpirationYear","cardNumber","securityCode","issuer","installments","transactionAmount","paymentMethodId","description","queryParams","subscribe","params","getNav","getCurrentNavigation","extras","state","pedido","initialize","loand","loadForm","loadFormCartao","card","getCard","itens","getTotal","formGroup","group","numerosDeParcelas","Validators","formGroupCartao","numero","titular","validade","get","value","getPaymentMethod","cardExpiration","slice","n","installment","pagamento","total","installment_rate","amount","bin","toPromise","paymentMethod","id","payment_type_id","imageUrl","secure_thumbnail","getInstallments","payment_method_id","x","y","issuerIstallment","payer_costs","cardHolderName","presentLoading","getCardHolderName","getDescription","dataCartao","navigationExtras","navigate","create","message","keyboardClose","spinner","cssClass","duration","loading","present","onDidDismiss","role","console","log","FormBuilder","Router","ActivatedRoute","LoadingController","NgxMercadopagoService","CardService","Component","selector","template"],"mappings":"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","file":"src_app_pages_pagamentocartao_pagamentocartao_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PagamentocartaoPage } from './pagamentocartao.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PagamentocartaoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PagamentocartaoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PagamentocartaoPageRoutingModule } from './pagamentocartao-routing.module';\n\nimport { PagamentocartaoPage } from './pagamentocartao.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    PagamentocartaoPageRoutingModule\n  ],\n  declarations: [PagamentocartaoPage]\n})\nexport class PagamentocartaoPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { NgxMercadopagoService } from 'ngx-mercadopago';\nimport { Payment } from 'src/app/models/mercadopago/payment';\nimport { CardItem } from '../../models/card-item';\nimport { DataCartao } from '../../models/data-cartao';\n\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { CardService } from '../../services/card.service';\n\n@Component({\n  selector: 'app-pagamentocartao',\n  templateUrl: './pagamentocartao.page.html',\n  styleUrls: ['./pagamentocartao.page.scss'],\n})\nexport class PagamentocartaoPage implements OnInit {\n\n  pedido: PedidoDTO;\n  itens: CardItem[];\n  parcelas: number;\n  formGroup: FormGroup;\n  formGroupCartao: FormGroup;\n  dataCartao: DataCartao;\n  cardNumber: string;//mercado pago\n  paymentMethodId: any;//mercado pago\n  payment_type_id: any;//mercado pago\n  imageUrl: any;//mercado pago\n  issuerIstallment: number;//mercado pago\n  data: any [] = [];//mercado pago\n  installments: any; //mercado pago\n  installment: any; //mercado pago\n  installment_rate: any;//mercado pago\n  amount: any; //mercadopago\n  total: any;\n\n  payment: Payment = {\n    email: \"\",\n    docType: \"\",\n    docNumber: \"\",\n    cardholderName: \"\",\n    cardExpirationMonth: \"\",\n    cardExpirationYear: \"\",\n    cardNumber: \"\",\n    securityCode: \"\",\n    issuer: 0,\n    installments: 0,\n    transactionAmount: 0,\n    paymentMethodId: \"\",\n    description: \"\"\n  }\n  \n  constructor(public formBuilder: FormBuilder,\n    public router: Router,\n    public route: ActivatedRoute,\n    public loadingController: LoadingController,\n    public ngxMpService: NgxMercadopagoService,\n    public cardService: CardService) {\n    this.route.queryParams.subscribe(params=> {\n      let getNav = this.router.getCurrentNavigation();\n      if (getNav.extras.state) {\n        this.pedido = getNav.extras.state.pedido;\n      }\n    }); \n  }\n\n  ngOnInit(){\n    this.ngxMpService.initialize();//iniciar serviços do mercado pago\n    this.loand();\n    this.loadForm();\n    this.loadFormCartao();\n    let card = this.cardService.getCard();\n    this.itens = card.itens;\n    this.getTotal();\n  }\n\n  loadForm(): void {\n    this.formGroup = this.formBuilder.group({\n      numerosDeParcelas: [0, Validators.required],\n      \"@type\": [\"pagamentoCartao\"]  \n    });\n  }\n\n  loadFormCartao(): void {\n    this.formGroupCartao = this.formBuilder.group({\n     numero: [\"\", [Validators.required,Validators.minLength(16), Validators.maxLength(16)]],\n     titular: [\"\", [Validators.required]],\n     paymentMethodId: [\"\"],\n     validade: [\"\", [Validators.required]],\n    });\n  }\n\n  onChange() { //pega o numero do cartao e armazena no cardNumber\n    this.cardNumber = this.formGroupCartao.get('numero').value;\n    this.getPaymentMethod();\n  }\n  \n  onChangeDataTime() {\n    let cardExpiration = this.formGroupCartao.get('validade').value;\n    this.payment.cardExpirationMonth = cardExpiration.slice(5,7);\n    this.payment.cardExpirationYear = cardExpiration.slice(2,4);\n  }\n\n  onChangeInstalment() {\n    let n  = this.formGroup.get('numerosDeParcelas').value;\n    this.installments = n;\n    this.installment = this.installments;\n    this.payment.installments = this.installment.installments;\n    this.pedido.pagamento = this.formGroup.value;//salvando pedido\n    let total = n.installment_rate / this.payment.installments + this.amount / this.payment.installments;\n    this.total = total;\n    this.installment_rate = n.installment_rate;\n  } \n\n  async getPaymentMethod() { //2º reconhecendo a bandeira do cartao\n    let cardNumber = this.cardNumber;\n      const paymentMethod = await this.ngxMpService.getPaymentMethod({\n         bin: cardNumber\n      }).toPromise();\n    this.paymentMethodId = paymentMethod.data[0].id;\n    this.payment_type_id = paymentMethod.data[0].payment_type_id;\n    this.imageUrl = paymentMethod.data[0].secure_thumbnail;\n    this.payment.cardNumber = cardNumber;\n    this.payment.paymentMethodId = this.paymentMethodId;\n    this.getInstallments();\n  }\n\n  async getInstallments() {//3º obter parcelas valor + taxa mercadopago\n    const issuer = await this.ngxMpService.getInstallments({\n    payment_type_id : this.payment_type_id,\n    payment_method_id: this.paymentMethodId,\n    bin: this.cardNumber.slice(0,6)\n  }).toPromise();\n  var x = issuer.data[0].issuer.id;\n  var y: number = + x;\n  this.issuerIstallment = y;\n  this.payment.issuer = this.issuerIstallment;\n  this.data = issuer.data[0].payer_costs;\n  this.payment.issuer = this.issuerIstallment;\n}\n\nasync getCardHolderName() {\n  let cardHolderName = this.formGroupCartao.get('titular').value;\n  this.payment.cardholderName = cardHolderName;\n}\nasync getDescription() {\n  let description = \"pagamento com cartao \" + this.paymentMethodId;\n  this.payment.description = description;\n}  \n    getTotal() {\n      this.amount = this.cardService.total();\n      this.payment.transactionAmount = this.cardService.total();\n    }\n\n    loand(){\n      this.presentLoading();\n    }\n\n    onSubmit() {\n      this.getCardHolderName();\n      this.getDescription();\n      this.dataCartao = this.formGroupCartao.value;\n        let navigationExtras: NavigationExtras = {\n          state: {\n            pedido: this.pedido,\n            dataCartao : this.dataCartao,\n            payment: this.payment,\n            installment: this.installment\n          }\n        };\n        this.router.navigate(['/dashboard/payment-form/order-confirmation-page', {pedido: this.pedido}], navigationExtras);\n      }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Aguarde...',\n      keyboardClose: true,\n      spinner:\"lines-small\",\n      cssClass: 'my-custom-class',\n      duration: 2000\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!');\n  }\n\n}\n","export default \"ion-header {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: x-small;\\n  color: #080808;\\n  text-align: center;\\n  --ion-background-color: rgb(240, 191, 233);\\n}\\n\\nion-content {\\n  --ion-background-color: rgb(252, 239, 250);\\n}\\n\\nion-list {\\n  font-feature-settings: \\\"sups\\\";\\n  font-variant-position: super;\\n}\\n\\nion-select {\\n  color: #0b21e0;\\n  --placeholder-color: #971e49;\\n  --placeholder-opacity: 1;\\n  width: 100%;\\n  justify-content: right;\\n}\\n\\nion-card-title {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: medium;\\n  color: #080808;\\n  text-align: center;\\n}\\n\\nion-label {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: medium;\\n  color: #080808;\\n  text-align: left;\\n}\\n\\nh5 {\\n  color: #080808;\\n  font-style: oblique;\\n}\\n\\nh6 {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  text-align: center;\\n  -moz-text-align-last: center;\\n       text-align-last: center;\\n  color: #0f0f0f;\\n}\\n\\nh1 {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  text-align: center;\\n  -moz-text-align-last: center;\\n       text-align-last: center;\\n  color: #0f0f0f;\\n}\\n\\n.ion-text-center {\\n  text-align: center;\\n}\\n\\nion-button {\\n  color: #f0bfe9;\\n}\\n\\n.ion-text-uppercase {\\n  text-transform: uppercase;\\n}\\n\\n.ion-thumbnail {\\n  width: auto;\\n  height: auto;\\n}\\n\\nimg {\\n  width: auto;\\n  height: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2FtZW50b2NhcnRhby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUU7RUFDRSxrQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7QUFDSjs7QUFFRTtFQUNFLDBDQUFBO0FBQ0o7O0FBRUU7RUFDRSw2QkFBQTtFQUFBLDRCQUFBO0FBQ0o7O0FBRUU7RUFDRSxjQUFBO0VBQ0EsNEJBQUE7RUFDQSx3QkFBQTtFQUNBLFdBQUE7RUFDQSxzQkFBQTtBQUNKOztBQUVBO0VBQ0ksa0NBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQUNKOztBQUVBO0VBQ0Usa0NBQUE7RUFDRSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUNKOztBQUNFO0VBQ0UsY0FBQTtFQUNBLG1CQUFBO0FBRUo7O0FBQ0U7RUFDRSxrQ0FBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSw0QkFBQTtPQUFBLHVCQUFBO0VBQ0EsY0FBQTtBQUVKOztBQUNFO0VBQ0Usa0NBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsNEJBQUE7T0FBQSx1QkFBQTtFQUNBLGNBQUE7QUFFSjs7QUFDRTtFQUNFLGtCQUFBO0FBRUo7O0FBQ0E7RUFDRSxjQUFBO0FBRUY7O0FBQ0E7RUFDRSx5QkFBQTtBQUVGOztBQUNBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFFRjs7QUFDRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBRUoiLCJmaWxlIjoicGFnYW1lbnRvY2FydGFvLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiAgaW9uLWhlYWRlciB7XG4gICAgZm9udC1mYW1pbHk6J0x1Y2lkYSBTYW5zIFJlZ3VsYXInO1xuICAgIGZvbnQtc2l6ZTogeC1zbWFsbDtcbiAgICBjb2xvcjogcmdiKDgsIDgsIDgpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MCwgMTkxLCAyMzMpO1xuICB9XG5cbiAgaW9uLWNvbnRlbnQgeyAgXG4gICAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1MiwgMjM5LCAyNTApO1xuICB9IFxuXG4gIGlvbi1saXN0e1xuICAgIGZvbnQtdmFyaWFudC1wb3NpdGlvbjogc3VwZXI7XG4gIH1cblxuICBpb24tc2VsZWN0IHtcbiAgICBjb2xvcjogIzBiMjFlMDtcbiAgICAtLXBsYWNlaG9sZGVyLWNvbG9yOiAjOTcxZTQ5O1xuICAgIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHJpZ2h0O1xuICB9XG5cbmlvbi1jYXJkLXRpdGxlIHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiBtZWRpdW07XG4gICAgY29sb3I6IHJnYig4LCA4LCA4KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICB9XG4gIFxuaW9uLWxhYmVsIHtcbiAgZm9udC1mYW1pbHk6J0x1Y2lkYSBTYW5zIFJlZ3VsYXInO1xuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbiAgaDUge1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcbiAgfVxuXG4gIGg2IHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiBzbWFsbDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbi1sYXN0OiBjZW50ZXI7IFxuICAgIGNvbG9yOiByZ2IoMTUsIDE1LCAxNSk7XG4gIH1cblxuICBoMSB7XG4gICAgZm9udC1mYW1pbHk6J0x1Y2lkYSBTYW5zIFJlZ3VsYXInO1xuICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtYWxpZ24tbGFzdDogY2VudGVyOyBcbiAgICBjb2xvcjogcmdiKDE1LCAxNSwgMTUpO1xuICB9XG4gIFxuICAuaW9uLXRleHQtY2VudGVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmlvbi1idXR0b24ge1xuICBjb2xvcjogcmdiKDI0MCwgMTkxLCAyMzMpO1xufVxuXG4uaW9uLXRleHQtdXBwZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuLmlvbi10aHVtYm5haWwge1xuICB3aWR0aDogYXV0bzsgXG4gIGhlaWdodDogYXV0bztcbiAgfVxuICBcbiAgaW1nIHtcbiAgICB3aWR0aDogYXV0bzsgXG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9Il19 */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <h6>Pagamento com cartão de credito</h6>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <ion-card>\\n    <ion-card-header>\\n    <ion-card-subtitle>Dados do Cartão</ion-card-subtitle>\\n    <form [formGroup]=\\\"formGroupCartao\\\">\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Número do cartão</ion-label>\\n        <ion-input formControlName=\\\"numero\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"16\\\" required (ionChange)=\\\"onChange($event)\\\" ></ion-input>\\n      </ion-item>  \\n      <p *ngIf=\\\"formGroupCartao.controls.numero.dirty && formGroupCartao.controls.numero.errors\\\" margin-left>Obrigatório. </p>\\n      \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Nome impresso no cartão</ion-label>\\n        <ion-input formControlName=\\\"titular\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupCartao.controls.titular.dirty && formGroupCartao.controls.titular.errors\\\" margin-left>Obrigatório. </p>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-thumbnail class=\\\"ion-thumbnail\\\" item-end> <img [src]=\\\"imageUrl\\\"> </ion-thumbnail>\\n        <ion-input slot=\\\"start\\\" disabled formControlName=\\\"paymentMethodId\\\" type=\\\"hidden\\\" id=\\\"paymentMethodId\\\" name=\\\"paymentMethodId\\\" > {{ paymentMethodId }} </ion-input>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"full\\\">\\n        <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Validade</ion-label>\\n        <ion-datetime locale=\\\"pt-BR\\\" formControlName=\\\"validade\\\" displayFormat=\\\"MM/YY\\\" min=\\\"2022\\\" max=\\\"2032-12-31\\\" doneText=\\\"Definir\\\" cancelText=\\\"Cancelar\\\" value=\\\"21-12\\\" (ionChange)=\\\"onChangeDataTime($event)\\\" required> </ion-datetime>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupCartao.controls.validade.dirty && formGroupCartao.controls.validade.errors\\\" margin-left>Obrigatório. </p>\\n\\n    </form>\\n    </ion-card-header>\\n  \\n    <ion-card-content>\\n      Lembre-se, não salvamos dados do seu cartão, não ligamos para você pedindos seus dados \\n      e não enviamos links solicitando sua senha via sms ou notificação por aplicativo.\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card>\\n    <ion-card-subtitle>Escolher a quantidade de parcelas</ion-card-subtitle>\\n    <ion-list lines=\\\"none\\\">\\n      <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <ion-item>\\n          <ion-label>Parcelar em </ion-label>\\n          <ion-select  [disabled]=\\\"formGroupCartao.invalid\\\" formControlName=\\\"numerosDeParcelas\\\" type=\\\"text\\\" name=\\\"numerosDeParcelas\\\" (ionChange)=\\\"onChangeInstalment($event)\\\" required >\\n            <ion-select-option *ngFor=\\\"let item of data\\\" [value]=\\\"item\\\"> {{ item.installments }} de {{ item.installment_rate / item.installments + amount / item.installments | currency }} ({{item.installment_rate + amount}}) </ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroup.controls.numerosDeParcelas.dirty && formGroup.controls.numerosDeParcelas.errors\\\" margin-left>Obrigatório. </p>\\n      </form> \\n    </ion-list>  \\n    <ion-card-header>\\n      <ion-card-subtitle *ngIf =\\\"payment.installments >0\\\" >Total do seu pedido: R{{ amount + installment_rate| currency}}</ion-card-subtitle>\\n      <ion-card-title *ngIf =\\\"payment.installments >0\\\" > você escolheu: {{payment.installments}} parcelas de: R{{total | currency}}</ion-card-title>\\n    </ion-card-header>  \\n    <ion-card-content>\\n      Para segurança se você fechar ou abrir outra pagina, \\n      ou reniciar apliacação, esses dados serão removidos.\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-button *ngIf =\\\"payment.installments >0\\\"  type=\\\"submit\\\" color=\\\"light\\\" expand=\\\"block\\\" (click)=\\\"onSubmit()\\\">Avançar na compra</ion-button>\\n  <ion-button [routerLink]=\\\"['/dashboard/index']\\\" color=\\\"light\\\" expand=\\\"block\\\">Voltar novamente</ion-button>\\n</ion-content>\\n\";"]}