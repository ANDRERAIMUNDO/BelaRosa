{"version":3,"sources":["webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.html"],"names":["routes","path","component","ProfilePage","loadChildren","then","m","ProfilePhotoPageModule","ProfilePageRoutingModule","NgModule","imports","RouterModule","exports","ProfilePageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","ExploreContainerComponentModule","declarations","storageService","registroService","clienteService","enderecoService","pedidoService","loadingController","alertController","formBuilder","route","authService","router","animation","id","senha","registroUpdateEmailDTO","email","registroUpdatePassowordDTO","password","phone","button","successUpdate","sniper","getMyData","formUpdateEmail","formUpdatePassword","formUpdateCliente","formUpdateAddress","localUser","getLocalUser","findByEmail","subscribe","response","registro","cliente","getImageIfExists","getEndereco","sliceTypeCliente","catchError","status","navigate","phoneSlice","area","slice","num","DateSlice","dateNasc","dia","mes","ano","CPFSlice","cpf","firstDigits","secundDigits","thirdDigist","lastDigits","getImageFromBucket","imageUrl","API_CONFIG","console","log","findById","endereco","snapshot","params","formGroupUpdateEmail","group","Validators","emailConfirm","formGroupUpdatePassword","passwordConfirm","formGroupUpdateCliente","formGroupUpdateAddress","cep","logradouro","numero","complemento","bairro","localidade","uf","newEmail","get","value","emailMsg","validEmailMsg","registroform","updateEmail","logout","updateRegistroValue","presentErrorUpdate","newPassword","passwordMsg","validPasswordMsg","updatePassword","emailUpdateAccount","clienteform","update","addressform","updateClienteValue","updateAddressValue","viaCep","presentEnderecoConfirm","show","hide","setTimeout","create","header","subHeader","message","buttons","alert","present","onDidDismiss","role","StorageService","RegistroService","ClienteService","EnderecoService","PedidoService","LoadingController","AlertController","FormBuilder","ActivatedRoute","AuthService","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_profile_profile_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  },\n  {\n    path: 'profile-photo',\n    loadChildren: () => import('../profile-photo/profile-photo.module').then( m => m.ProfilePhotoPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule,\n    ExploreContainerComponentModule,\n    ExploreContainerComponentModule\n\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { RegistroUpdateEmailDTO } from 'src/app/models/registroUpdateEmail.dto';\nimport { RegistroUpdatePassowordDTO } from 'src/app/models/registroUpdatePassword.dto';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { API_CONFIG } from 'src/config/config';\nimport { ClienteDTO } from '../../models/cliente.dto';\nimport { Endereco } from '../../models/endereco';\nimport { RegistroDTO } from '../../models/registro.dto';\nimport { ClienteService } from '../../services/cliente.service';\nimport { EnderecoService } from '../../services/endereco.service';\nimport { PedidoService } from '../../services/pedido.service';\nimport { RegistroService } from '../../services/registro.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n\n  animation = true;\n  registro : RegistroDTO;\n  id: String = \"\";\n  senha: string = \"password\";\n  registroUpdateEmailDTO: RegistroUpdateEmailDTO =\n  {\n    email:\"\"\n  }   \n  registroUpdatePassowordDTO: RegistroUpdatePassowordDTO = \n  {\n    password:\"\"\n  }\n  cliente : ClienteDTO;\n  endereco: Endereco;\n\n  updateRegistroValue: boolean;\n  updateClienteValue: boolean;\n  updateAddressValue: boolean;\n\n  formGroupUpdateEmail: FormGroup;\n  formGroupUpdatePassword: FormGroup;\n  formGroupUpdateCliente: FormGroup;\n  formGroupUpdateAddress: FormGroup;\n\n  email: string;\n  newEmail: string;\n  emailConfirm: string;\n  newPassword: string;\n  passwordConfirm: string;\n  phone: String = \"\";\n  cep: string;\n  phoneSlice: string;\n  area : string;\n  num : string;\n  DateSlice: string;\n  dia: string;\n  ano: string;\n  mes: string;\n  CPFSlice: string;\n  firstDigits: string;\n  secundDigits: string;\n  thirdDigist: string;\n  lastDigits: string;\n\n  emailMsg: string;\n  passwordMsg: string;\n  validEmailMsg: string;\n  validPasswordMsg: string;\n\n  successUpdate: string;\n  sniper : string;\n  button = false;\n \n  constructor( public storageService:  StorageService,\n               public registroService: RegistroService,\n               public clienteService: ClienteService,\n               public enderecoService: EnderecoService,\n               public pedidoService: PedidoService,\n               public loadingController: LoadingController,\n               public alertController : AlertController,\n               public formBuilder: FormBuilder,\n               public route: ActivatedRoute,\n               public authService: AuthService,\n               public router: Router) { }\n\n  ionViewWillEnter() {\n    this.successUpdate = null;\n    this.button = false;\n    this.sniper = null;\n    this.getMyData();\n    this.formUpdateEmail();\n    this.formUpdatePassword();\n    this.formUpdateCliente();\n    this.formUpdateAddress();\n  }\n\n  getMyData(){\n    let localUser = this.storageService.getLocalUser();\n    if (localUser && localUser.email)\n    {\n      this.registroService.findByEmail(localUser.email)\n      .subscribe(response=>\n        {\n          this.registro = response as RegistroDTO;\n          this.cliente = response as ClienteDTO;\n          this.getImageIfExists();\n          this.getEndereco();\n          this.sliceTypeCliente();\n        },\n       catchError =>\n       {\n         if (catchError.status == 403)\n         {\n           this.router.navigate(['/home']);\n         }\n       });\n    }\n  }\n\n  sliceTypeCliente() {\n    this.email= this.registro.email;\n    this.phoneSlice = this.registro.cliente.phone;\n    this.area = this.phoneSlice.slice(0,2);\n    this.num = this.phoneSlice.slice(2,11);\n    this.DateSlice = this.registro.cliente.dateNasc;\n    this.dia = this.DateSlice.slice(0,2);  \n    this.mes = this.DateSlice.slice(2,4);\n    this.ano = this.DateSlice.slice(4,8);\n    this.CPFSlice = this.registro.cliente.cpf;\n    this.firstDigits = this.CPFSlice.slice(0,3);\n    this.secundDigits = this.CPFSlice.slice(3,6);\n    this.thirdDigist = this.CPFSlice.slice(6,9);\n    this.lastDigits = this.CPFSlice.slice(9,11);\n  }\n\n  getImageIfExists(){\n    this.registroService.getImageFromBucket(this.registro.id)\n    .subscribe(response =>\n      {\n        this.registro.imageUrl = `${API_CONFIG.bukectBaseUrl}/profiles/cp${this.registro.id}.png`;\n        },\n        catchError=>{console.log(catchError)});\n      }\n  \n  getEndereco(){\n    this.enderecoService.findById(this.registro.id)\n      .subscribe(response=>\n        {\n          this.endereco = response as Endereco;\n        },\n         catchError =>\n         {\n           if (catchError.status == 403)\n           {  \n             this.router.navigate(['/address']);\n           }\n         }\n        );  \n  }\n\n\n  formUpdateEmail() {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupUpdateEmail = this.formBuilder.group(\n      {\n        email: ['', Validators.email],\n        emailConfirm: ['', Validators.email]\n      });\n  }\n\n  formUpdatePassword() {\n    this.formGroupUpdatePassword = this.formBuilder.group(\n      {\n        password: ['', Validators.minLength(5)],\n        passwordConfirm: ['', Validators.minLength(5)]\n      });\n  }\n\n\n  formUpdateCliente () {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupUpdateCliente =  this.formBuilder.group(\n    {\n      phone: [null,[Validators.required, Validators.minLength(11)]]\n    });\n  }\n\n  formUpdateAddress () {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupUpdateAddress =  this.formBuilder.group(\n      {\n        cep: ['', [Validators.required]],\n        logradouro: ['',[Validators.required]],  \n        numero: ['', [Validators.required]],\n        complemento: ['', [Validators.required]],\n        bairro: ['', [Validators.required]],\n        localidade:['', [Validators.required]],\n        uf: ['', [Validators.required]],\n      });\n  }\n\n  onChangeEmail() {\n    let email;\n    this.newEmail = this.formGroupUpdateEmail.get('email').value;\n    this.emailConfirm = this.formGroupUpdateEmail.get('emailConfirm').value;\n    if (this.newEmail == this.emailConfirm) \n      {\n        email = this.newEmail;\n        this.registroUpdateEmailDTO.email = email;\n        this.emailMsg = null;\n        this.validEmailMsg = null;\n      } else \n        {\n          this.emailMsg = \"ok\";\n        }\n}\n\n  updateEmail(registroform: NgForm) {\n    this.button = true;\n    this.sniper = \"ok\";\n\n    this.registroService.updateEmail(this.registro.id, registroform)\n      .subscribe(response =>\n        {\n          console.log(response);\n          this.authService.logout();\n          this.successUpdate = \"ok\"; \n        }, catchError=>\n          {\n            this.button = false;\n            this.sniper = null;\n            this.successUpdate = null;\n            console.log(catchError);\n            this.updateRegistroValue = null;\n            this.presentErrorUpdate();\n          });\n  }\n\n  onChangePassword() { \n    let password;\n    this.newPassword = this.formGroupUpdatePassword.get('password').value;\n    this.passwordConfirm = this.formGroupUpdatePassword.get('passwordConfirm').value;\n      if (this.newPassword == this.passwordConfirm) \n      {\n        password = this.newPassword;\n        this.registroUpdatePassowordDTO.password = password;\n        this.passwordMsg = null;\n        this.validPasswordMsg = null;\n      }\n      else \n      {\n       this.passwordMsg = \"ok\";\n      }\n  }\n  \n  updatePassword(registroform: NgForm) {\n    this.button = true;\n    this.sniper = \"ok\";\n\n    this.registroService.updatePassword(this.registro.id, registroform)\n      .subscribe(response=>\n        {\n          console.log(response);\n          this.emailUpdateAccount();\n          this.authService.logout();\n        }, catchError=>\n          {\n            this.button = false;\n            this.sniper = null;\n            this.successUpdate = null;\n            console.log(catchError);\n            this.updateRegistroValue = null;  \n            this.presentErrorUpdate();\n          });\n}\n\n  updateCliente(clienteform: NgForm) {\n    this.button = true;\n    this.sniper = \"ok\";\n   this.clienteService.update(this.cliente.id, clienteform)\n   .subscribe(response =>\n    {\n      console.log(response);\n      this.emailUpdateAccount();\n    }, catchError=>\n      {\n        this.button = false;\n        this.sniper = null;\n        this.successUpdate = null;\n        console.log(catchError);\n        this.presentErrorUpdate();\n      });\n}\n\n  updateAddress(addressform: NgForm) {\n    this.button = true;\n    this.sniper = \"ok\";\n    this.enderecoService.update(this.registro.id, addressform)\n    .subscribe(response =>\n      {\n        console.log(response);\n        this.emailUpdateAccount();\n      }, catchError=>\n        {\n          this.button = false;\n          this.sniper = null;\n          this.successUpdate = null;\n          console.log(catchError);\n          this.presentErrorUpdate();\n        });\n  }\n  updateOnRegistro() {\n    this.updateRegistroValue = true;\n    this.button = false;\n    this.validEmailMsg = \"ok\";\n    this.validPasswordMsg = \"ok\";\n  }\n\n  updateOnCliente() {\n    this.updateClienteValue = true;\n    this.button = false;\n  }\n\n  updateOnAddress() {\n    this.updateAddressValue = true;\n    this.button = false;\n  }\n\n  \n  getViaCep(){\n    let cep = this.formGroupUpdateAddress.get('cep').value;\n    this.clienteService.viaCep(cep)\n    .subscribe(response=>\n      {\n        this.endereco = response;\n      },\n      catchError=>\n        {\n          this.presentEnderecoConfirm();\n        }\n      );\n  }\n\n  showPassword () {\n    let show = \"text\"\n    let hide = \"password\"\n    this.senha = show;\n    setTimeout(() => {\n      this.senha = hide;\n    }, 3000);\n  }\n\n  emailUpdateAccount() {\n    let email =  this.registro.email;\n    console.log(this.registro.email);\n    this.registroService.emailUpdateAccount(email)\n      .subscribe(response=>\n        {\n          this.successUpdate = \"ok\"; \n        },\n        catchError=>\n          {\n            this.button = false;\n            this.sniper = null;\n            this.successUpdate= null;\n            console.log(catchError);\n          });\n  }\n\n  async presentEnderecoConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Atenção!',\n      subHeader: 'Não encontramos o cep que voce colocou',\n      message: 'Caso erro continue insira os dados manualmente.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentErrorUpdate() {\n    const alert = await this.alertController.create({\n      header: 'Atenção!',\n      subHeader: 'Erro ao tenta atualizar',\n      message: 'Caso erro continue, reinicei o app.',\n      buttons: ['OK']\n    });\n    await alert.present();\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  reload() {\n    this.sniper = null;\n    this.updateRegistroValue = null;\n    this.updateClienteValue = null;\n    this.updateAddressValue = null;\n  }\n\n  sucess() {\n    this.successUpdate = null;\n    this.router.navigate(['/home']);\n    //this.button = false;\n    //this.sniper = null;\n    //this.successUpdate = null;\n  }\n\n  ShowPedidos() {\n    this.router.navigate(['/dashboard/pedidos']);\n  }\n\n}\n  ","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container-button {\\n  text-align: left;\\n  position: absolute;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  color: #f39ce7;\\n}\\n\\n#imagem-visao {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\nion-header {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: x-small;\\n  color: #080808;\\n  text-align: length;\\n  --ion-background-color: rgb(240, 191, 233);\\n}\\n\\ndiv {\\n  text-align: center;\\n}\\n\\n#container ion-card {\\n  width: auto;\\n  height: auto;\\n}\\n\\nion-card-title {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  color: #080808;\\n  text-align: center;\\n  width: 75;\\n  height: 75;\\n}\\n\\nion-avatar {\\n  left: auto;\\n  right: auto;\\n}\\n\\nion-img {\\n  width: auto;\\n  height: auto;\\n}\\n\\nion-card-title {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: smaller;\\n  color: #080808;\\n  text-align: center;\\n}\\n\\nion-header {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: x-small;\\n  color: #080808;\\n  text-align: center;\\n  --ion-background-color: rgb(240, 191, 233);\\n}\\n\\nion-content {\\n  --ion-background-color: rgb(252, 239, 250);\\n}\\n\\nh6 {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  text-align: center;\\n  -moz-text-align-last: center;\\n       text-align-last: center;\\n  color: #0f0f0f;\\n}\\n\\nh5 {\\n  color: #f063db;\\n}\\n\\nion-icon {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\nion-button {\\n  color: #f0bfe9;\\n}\\n\\n.ion-text-uppercase {\\n  text-transform: uppercase;\\n}\\n\\nion-input {\\n  font-size: small;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBRUU7RUFDRSxrQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUdFO0VBQ0Usa0NBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0FBQUo7O0FBR0U7RUFFRSxVQUFBO0VBQ0EsV0FBQTtBQURKOztBQUlFO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFETjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUFESjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQ0FBQTtBQURKOztBQUlFO0VBQ0UsMENBQUE7QUFESjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLDRCQUFBO09BQUEsdUJBQUE7RUFDQSxjQUFBO0FBREo7O0FBR0U7RUFDRSxjQUFBO0FBQUo7O0FBR0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFKOztBQUdFO0VBQ0UsY0FBQTtBQUFKOztBQUdFO0VBQ0UseUJBQUE7QUFBSjs7QUFHRztFQUNDLGdCQUFBO0FBQUoiLCJmaWxlIjoicHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgICNjb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIH1cblxuICAjY29udGFpbmVyLWJ1dHRvbiB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGNvbG9yOiByZ2IoMjQzLCAxNTYsIDIzMSk7XG4gIH1cbiAgXG4gICNpbWFnZW0tdmlzYW8ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuXG4gIGlvbi1oZWFkZXIge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHgtc21hbGw7XG4gICAgY29sb3I6IHJnYig4LCA4LCA4KTtcbiAgICB0ZXh0LWFsaWduOiBsZW5ndGg7IFxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDE5MSwgMjMzKTtcbiAgfVxuICBcbiAgZGl2IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gICNjb250YWluZXIgaW9uLWNhcmQgIHtcbiAgICB3aWR0aDogYXV0bzsgXG4gICAgaGVpZ2h0OiBhdXRvO1xuICBcbiAgfVxuICBcbiAgaW9uLWNhcmQtdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHNtYWxsO1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICB3aWR0aDogNzU7IFxuICAgIGhlaWdodDogNzU7XG4gICAgfVxuICBcbiAgaW9uLWF2YXRhciB7XG4gICAgLy9wb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogYXV0bztcbiAgfVxuXG4gIGlvbi1pbWcgeyBcbiAgICAgIHdpZHRoOiBhdXRvOyBcbiAgICAgIGhlaWdodDogYXV0bztcbiAgfVxuICBcbiAgaW9uLWNhcmQtdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XG4gICAgY29sb3I6IHJnYig4LCA4LCA4KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICB9XG4gIFxuICBpb24taGVhZGVyIHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiB4LXNtYWxsO1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAxOTEsIDIzMyk7XG4gIH1cbiAgXG4gIGlvbi1jb250ZW50IHsgIFxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTIsIDIzOSwgMjUwKTtcbiAgfSBcbiAgXG4gIGg2IHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiBzbWFsbDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbi1sYXN0OiBjZW50ZXI7IFxuICAgIGNvbG9yOiByZ2IoMTUsIDE1LCAxNSk7XG4gIH1cbiAgaDUge1xuICAgIGNvbG9yOiAgcmdiKDI0MCwgOTksIDIxOSk7XG4gIH1cbiAgXG4gIGlvbi1pY29uIHtcbiAgICB3aWR0aDogMjBweDsgXG4gICAgaGVpZ2h0OiAyMHB4O1xuICB9XG4gIFxuICBpb24tYnV0dG9uIHtcbiAgICBjb2xvcjogcmdiKDI0MCwgMTkxLCAyMzMpO1xuICB9XG5cbiAgLmlvbi10ZXh0LXVwcGVyY2FzZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuXG4gICBpb24taW5wdXQge1xuICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gIH0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-avatar slot=\\\"end\\\">\\n        <img [src]=\\\"registro?.imageUrl || '../../assets/person.svg'\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <h3>{{registro?.cliente?.name}}</h3>\\n        <p>{{dia}}/{{mes}}/{{ano}}</p>\\n        <p>{{registro?.email}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"successUpdate\\\" id=\\\"container\\\" padding>\\n  <br>\\n  <br>\\n  <br>\\n  <br>\\n  <br>\\n  <p> Suas informações foram atualizadas. </p>\\n  <p> Faça login novamente</p>\\n  <ion-button color=\\\"light\\\" expand=\\\"block\\\" (click)=\\\"sucess()\\\"> Continuar </ion-button>\\n  <app-explore-container> </app-explore-container>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"!successUpdate\\\" padding>\\n\\n    <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-label>\\n          <h3>Nome: {{registro?.cliente?.name}}</h3>\\n          <h3>Contato: ({{area}}) {{num}}</h3>\\n          <p>Data de Nascimento: {{dia}}/{{mes}}/{{ano}}</p>\\n          <p>CPF: {{firstDigits}}.{{secundDigits}}.{{thirdDigist}}-{{lastDigits}}</p>\\n          <p>Email: {{registro?.email}}</p>\\n          <ion-button color=\\\"light\\\" (click)=\\\"updateOnCliente()\\\">Informações pessoais</ion-button>\\n        </ion-label>\\n        <ion-thumbnail>\\n        <img [src]=\\\"registro?.imageUrl || '../../assets/person.svg'\\\">\\n        </ion-thumbnail>\\n      </ion-item>\\n    <ion-button color=\\\"light\\\" (click)=\\\"updateOnRegistro()\\\">Atualização segurança</ion-button>\\n    </div>\\n     <!--update Registro-->\\n    <div *ngIf=\\\"updateRegistroValue == true\\\">\\n      <!--atualizacao de email-->\\n      <form [formGroup]=\\\"formGroupUpdateEmail\\\" (ngSubmit)=\\\"updateEmail(formGroupUpdateEmail.value)\\\">\\n        <ion-list>\\n        <!--email-->\\n            <ion-label>\\n              <h5>Novo Email</h5>\\n            </ion-label>\\n            <ion-item>\\n              <ion-input formControlName=\\\"email\\\" class=\\\"email\\\" placeholder=\\\"{{email}}\\\" type=\\\"email\\\" required></ion-input>\\n            </ion-item>\\n            <p *ngIf=\\\"formGroupUpdateEmail.controls.email.dirty && formGroupUpdateEmail.controls.email.errors\\\" margin-left>Email invalido. </p>\\n            <p *ngIf=\\\"emailMsg\\\">Emails estão diferentes. </p>\\n          <!--emailConfirm-->\\n            <ion-label>\\n              <h5>Confirmar novo Email</h5>\\n            </ion-label>\\n            <ion-item>\\n              <ion-input formControlName=\\\"emailConfirm\\\" class=\\\"email\\\" placeholder=\\\"{{email}}\\\" type=\\\"email\\\" (ionChange)=\\\"onChangeEmail($event)\\\" required></ion-input>\\n            </ion-item>\\n            <p *ngIf=\\\"formGroupUpdateEmail.controls.emailConfirm.dirty && formGroupUpdateEmail.controls.emailConfirm.errors\\\" margin-left>Email invalido. </p>\\n            <p *ngIf=\\\"emailMsg\\\">Emails estão diferentes. </p>\\n          <ion-button disabled = \\\"{{button}}\\\" *ngIf=\\\"!validEmailMsg\\\" type=\\\"submit\\\" color=\\\"light\\\">\\n            <ion-spinner *ngIf=\\\"sniper\\\" color=\\\"secondary\\\" > </ion-spinner>\\n              <p *ngIf=\\\"sniper\\\"> Atualizando ... </p>\\n              <p *ngIf=\\\"!sniper\\\"> Alterar informações </p>\\n          </ion-button>\\n        </ion-list>\\n      </form>\\n       <!--atualizacao de senha-->\\n      <form [formGroup]=\\\"formGroupUpdatePassword\\\" (ngSubmit)=\\\"updatePassword(formGroupUpdatePassword.value)\\\">\\n        <ion-list>\\n            <!--password-->\\n            <ion-label>\\n              <h5>Nova senha</h5>\\n            </ion-label>\\n           <ion-item>\\n             <ion-input formControlName=\\\"password\\\" placeholder=\\\"*************\\\" type={{senha}} required ></ion-input>\\n             <ion-button id=\\\"container-button\\\" color=\\\"light\\\" fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"showPassword()\\\">\\n               <img id=\\\"imagem-visao\\\" src=\\\"../../assets/visao.png\\\"/>\\n            </ion-button>\\n          </ion-item>\\n             <p *ngIf=\\\"formGroupUpdatePassword.controls.password.dirty && formGroupUpdatePassword.controls.password.errors\\\" margin-left>Senha não atende os requisitos minimos.</p>\\n             <p *ngIf=\\\"passwordMsg\\\">Senhas estão diferentes. </p>\\n          <!--password Confirm-->\\n            <ion-label>\\n             <h5>Repetir nova senha</h5>\\n            </ion-label>\\n            <ion-item>\\n               <ion-input formControlName=\\\"passwordConfirm\\\" placeholder=\\\"*************\\\" type={{senha}} (ionChange)=\\\"onChangePassword($event)\\\" required ></ion-input>\\n               <ion-button id=\\\"container-button\\\" color=\\\"light\\\" fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"showPassword()\\\">\\n                <img id=\\\"imagem-visao\\\" src=\\\"../../assets/visao.png\\\"/>\\n               </ion-button>\\n            </ion-item>\\n              <p *ngIf=\\\"formGroupUpdatePassword.controls.passwordConfirm.dirty && formGroupUpdatePassword.controls.passwordConfirm.errors\\\" margin-left>Senha não atende os requisitos minimos.</p>\\n              <p *ngIf=\\\"passwordMsg\\\">Senhas estão diferentes. </p>\\n            <ion-button disabled = \\\"{{button}}\\\" *ngIf=\\\"!validPasswordMsg\\\" type=\\\"submit\\\" color=\\\"light\\\">\\n              <ion-spinner *ngIf=\\\"sniper\\\" color=\\\"secondary\\\" > </ion-spinner>\\n              <p *ngIf=\\\"sniper\\\"> Atualizando ... </p>\\n              <p *ngIf=\\\"!sniper\\\"> Alterar informações </p>\\n            </ion-button>\\n         </ion-list>\\n      </form>\\n        <ion-button [disabled]=\\\"formGroupUpdateEmail.valid ||formGroupUpdatePassword.valid\\\" (click)=\\\"reload()\\\"type=\\\"submit\\\" color=\\\"light\\\">Cancelar</ion-button>\\n     </div>\\n     <!--updateImageClient-->\\n    <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n      <ion-label>\\n        <p>Carregar imagem perfil</p>\\n        <ion-button [routerLink]=\\\"['./profile-photo']\\\" color=\\\"light\\\">Enviar imagem</ion-button>\\n      </ion-label>\\n      <ion-item>\\n        <ion-label>\\n          <h3>Endereço: {{endereco?.logradouro}}, {{endereco?.numero}}</h3>\\n          <h3>{{endereco?.complemento}} {{endereco?.bairro}} CEP {{endereco?.cep}}</h3>\\n          <p>Cidade: {{endereco?.localidade}}, {{endereco?.uf}}</p>\\n          <ion-button color=\\\"light\\\" (click)=\\\"updateOnAddress()\\\">Atualizar endereco</ion-button>\\n        </ion-label>\\n      </ion-item>\\n    </div>\\n    <!--updateCliente-->\\n    <div *ngIf=\\\"updateClienteValue == true\\\">\\n      <form [formGroup]=\\\"formGroupUpdateCliente\\\" (ngSubmit)=\\\"updateCliente(formGroupUpdateCliente.value)\\\">\\n        <ion-list>\\n        <!--Nome-->\\n        <ion-label>\\n          <h5>Cliente</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input type=\\\"text\\\" class=\\\"ion-text-uppercase\\\" disabled>{{registro?.cliente?.name}}</ion-input>\\n        </ion-item>\\n        <!--cpf-->\\n        <ion-label>\\n          <h5>CPF</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input type=\\\"text\\\" disabled>{{firstDigits}}.{{secundDigits}}.{{thirdDigist}}-{{lastDigits}}</ion-input>\\n        </ion-item>\\n        <!--data de nascimento-->\\n        <ion-label>\\n          <h5>Data de Nascimento</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input disabled>{{dia}}/{{mes}}/{{ano}}</ion-input>\\n        </ion-item>\\n        <!--telefone-->\\n        <ion-label>\\n          <h5>Celular</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName =\\\"phone\\\" placeholder=\\\"({{area}}) {{num}}\\\" maxlength=\\\"11\\\" inputmode=\\\"numeric\\\" type=\\\"tel\\\" clear-input required></ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateCliente.controls.phone.dirty && formGroupUpdateCliente.controls.phone.errors\\\" margin-left>Digite o número do celular.</p>\\n      </ion-list>\\n      <ion-button disabled = \\\"{{button}}\\\" [disabled]=\\\"formGroupUpdateCliente.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">\\n        <ion-spinner *ngIf=\\\"sniper\\\" color=\\\"secondary\\\" duration = 3 > </ion-spinner>\\n        <p *ngIf=\\\"sniper\\\"> Atualizando ... </p>\\n        <p *ngIf=\\\"!sniper\\\"> Alterar informações </p>\\n      </ion-button>\\n      </form>\\n      <ion-button disabled = \\\"{{button}}\\\" [disabled]=\\\"formGroupUpdateCliente.valid\\\" type=\\\"submit\\\" color=\\\"light\\\" (click)=\\\"reload()\\\">Cancelar</ion-button>\\n     </div>\\n      <!--update Addrress-->\\n    <div *ngIf=\\\"updateAddressValue == true\\\">\\n        <form [formGroup]=\\\"formGroupUpdateAddress\\\" (ngSubmit)=\\\"updateAddress(formGroupUpdateAddress.value)\\\">\\n        <ion-list>\\n          <ion-label>\\n            <h5>Cep</h5>\\n          </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"cep\\\" placeholder=\\\"{{endereco?.cep}}\\\" type=\\\"number\\\" required ></ion-input>\\n        </ion-item>\\n        <p>Digite ou insira seu endereço nanualmente <ion-button color=\\\"light\\\" (click)=\\\"getViaCep()\\\">buscar</ion-button></p>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.cep.dirty && formGroupUpdateAddress.controls.cep.errors\\\" margin-left>Digite um cep valido. </p>\\n        <!--logradouro-->\\n        <ion-label>\\n        <h5>Endereço</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"logradouro\\\"  placeholder=\\\"{{endereco?.logradouro}}\\\" type=\\\"text\\\" value='{{endereco?.logradouro}}' required> </ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.logradouro.dirty && formGroupUpdateAddress.controls.logradouro.errors\\\" margin-left>Obrigatório. </p>\\n        <!--numero-->\\n        <ion-label>\\n          <h5>Número</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"numero\\\"  placeholder=\\\"{{endereco?.numero}}\\\" type=\\\"text\\\" required></ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.numero.dirty && formGroupUpdateAddress.controls.numero.errors\\\" margin-left>Obrigatório. </p>\\n        <!--complemento-->\\n        <ion-label>\\n          <h5>Complemento</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"complemento\\\" placeholder=\\\"{{endereco?.complemento}}\\\" type=\\\"text\\\" value='{{endereco?.complemento}}' required> </ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.complemento.dirty && formGroupUpdateAddress.controls.complemento.errors\\\" margin-left>Obrigatório. </p>\\n        <!--bairro-->\\n        <ion-label>\\n          <h5>Bairro</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"bairro\\\"  placeholder=\\\"{{endereco?.bairro}}\\\" type=\\\"text\\\" value='{{endereco?.bairro}}' required> </ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.bairro.dirty && formGroupUpdateAddress.controls.bairro.errors\\\" margin-left>Obrigatório. </p>\\n         <!--localidade-->\\n         <ion-label>\\n          <h5>Cidade</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"localidade\\\"  placeholder=\\\"{{endereco?.localidade}}\\\" type=\\\"text\\\" value='{{endereco?.localidade}}' required> </ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.localidade.dirty && formGroupUpdateAddress.controls.localidade.errors\\\" margin-left>Obrigatório. </p>\\n        <!--uf-->\\n        <ion-label>\\n          <h5>Estado</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"uf\\\"  placeholder=\\\"{{endereco?.uf}}\\\" type=\\\"text\\\" value='{{endereco?.uf}}' required> </ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupUpdateAddress.controls.uf.dirty && formGroupUpdateAddress.controls.uf.errors\\\" margin-left>Obrigatório. </p>\\n        <ion-button disabled = \\\"{{button}}\\\" [disabled]=\\\"formGroupUpdateAddress.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">\\n          <ion-spinner *ngIf=\\\"sniper\\\" color=\\\"secondary\\\" > </ion-spinner>\\n          <p *ngIf=\\\"sniper\\\"> Atualizando ... </p>\\n          <p *ngIf=\\\"!sniper\\\"> Alterar informações </p>\\n        </ion-button>\\n      </ion-list>\\n      </form>\\n      <ion-button type=\\\"submit\\\" color=\\\"light\\\" (click)=\\\"reload()\\\">Cancelar</ion-button>\\n    </div>\\n  \\n    <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n      <h4 slot=\\\"start\\\">Meus pedidos</h4>\\n      <ion-button (click)=\\\"ShowPedidos()\\\" color=\\\"light\\\">Lista completa</ion-button>\\n    </div>\\n  \\n<app-explore-container> </app-explore-container>\\n</ion-content>\\n\\n\\n\\n\\n\";"]}