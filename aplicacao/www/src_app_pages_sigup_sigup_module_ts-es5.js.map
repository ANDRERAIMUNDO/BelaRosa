{"version":3,"sources":["webpack:///src/app/pages/sigup/sigup-routing.module.ts","webpack:///src/app/pages/sigup/sigup.module.ts","webpack:///src/app/pages/sigup/sigup.page.ts","webpack:///src/app/pages/sigup/sigup.page.scss","webpack:///src/app/pages/sigup/sigup.page.html"],"names":["routes","path","component","SigupPage","SigupPageRoutingModule","NgModule","imports","RouterModule","exports","SigupPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","clienteService","registroService","storageService","router","formBuilder","alertController","button","clienteNewDto","registroId","name","cpf","dateNasc","phone","cep","logradouro","numero","complemento","bairro","localidade","uf","localUser","getLocalUser","email","findByEmail","subscribe","response","registro","_registroId","id","catchError","status","navigate","formGroup","group","Validators","get","value","viaCep","endereco","errorCep","sniper","insert","emailNewAccount","successUpdate","console","log","create","cssClass","subHeader","message","buttons","text","handler","alert","present","ClienteService","RegistroService","StorageService","Router","FormBuilder","AlertController","Component","selector","template"],"mappings":"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","file":"src_app_pages_sigup_sigup_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SigupPage } from './sigup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SigupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SigupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SigupPageRoutingModule } from './sigup-routing.module';\n\nimport { SigupPage } from './sigup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SigupPageRoutingModule\n  ],\n  declarations: [SigupPage]\n})\nexport class SigupPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\nimport { ClienteDTO } from '../../models/cliente.dto';\nimport { ClienteNewDTO } from '../../models/clienteNew.dto';\nimport { Endereco } from '../../models/endereco';\nimport { RegistroDTO } from '../../models/registro.dto';\nimport { ClienteService } from '../../services/cliente.service';\nimport { RegistroService } from '../../services/registro.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-sigup',\n  templateUrl: './sigup.page.html',\n  styleUrls: ['./sigup.page.scss'],\n})\nexport class SigupPage implements OnInit {\n  formGroup: FormGroup;\n  registro: RegistroDTO;\n  cliente: ClienteDTO;\n  endereco: Endereco;\n  cep: string;\n  _registroId: string;\n  email: string;\n\n  sniper : string;\n  button = false;\n\n  successUpdate: string;\n  \n  clienteNewDto: ClienteNewDTO =\n  {\n    registroId:  \"\",\n    name: \"\",\n    cpf: \"\",\n    dateNasc: \"\",\n    phone: \"\",\n    cep: \"\",\n    logradouro: \"\",\n    numero: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    localidade: \"\",\n    uf: \"\"\n  };\n\n  constructor(public clienteService: ClienteService,\n    public registroService: RegistroService,\n    public storageService: StorageService,\n    public router: Router,\n    public formBuilder: FormBuilder,\n    public alertController: AlertController) { }\n    \n    ngOnInit() {\n    let localUser = this.storageService.getLocalUser();\n    if (localUser && localUser.email)\n    {\n      this.registroService.findByEmail(localUser.email)\n      .subscribe(response=>\n        {\n          this.registro = response as RegistroDTO;\n          this._registroId = this.registro.id;\n          this.clienteNewDto.registroId = this._registroId;\n          this.email = this.registro.email;\n        }, catchError =>\n            {\n              if (catchError.status == 403)\n                {\n                  this.router.navigate(['/sigup']);\n                } \n            }\n        );\n    }\n  \n    this.formGroup =  this.formBuilder.group(\n      {\n        name: ['', [Validators.maxLength(50)]],\n        cpf: ['', [Validators.minLength(11)]],\n        dateNasc: ['', [Validators.maxLength(8)]],\n        phone: ['', [Validators.maxLength(11)]],\n        cep: ['', [Validators.minLength(8)]],\n        logradouro: ['', [Validators.maxLength(50)]],\n        numero: ['', [Validators.maxLength(6)]],\n        complemento: ['', [Validators.maxLength(50)]],\n        bairro: ['', [Validators.maxLength(50)]],\n        localidade: ['', [Validators.maxLength(50)]],\n        uf: ['', [Validators.maxLength(2)]],\n      });\n  }\n\n  getEndereco(){\n    let cep = this.formGroup.get('cep').value;\n    this.clienteService.viaCep(cep)\n    .subscribe(response=>\n      {\n        this.endereco = response;\n      },\n        catchError => \n        {\n          this.errorCep();\n        });    \n  }\n\n  submitForm(){\n    this.button = true;\n    this.sniper = \"ok\";\n    let name = this.formGroup.get('name').value;\n    let cpf = this.formGroup.get('cpf').value;\n    let dateNasc = this.formGroup.get('dateNasc').value;\n    let phone = this.formGroup.get('phone').value;\n\n    let cep = this.formGroup.get('cep').value;\n    let logradouro = this.formGroup.get('logradouro').value;\n    let numero = this.formGroup.get('numero').value;\n    let complemento = this.formGroup.get('complemento').value;\n    let bairro = this.formGroup.get('bairro').value;\n    let localidade = this.formGroup.get('localidade').value;\n    let uf = this.formGroup.get('uf').value;\n\n    this.clienteNewDto.name = name;\n    this.clienteNewDto.cpf = cpf;\n    this.clienteNewDto.dateNasc = dateNasc;\n    this.clienteNewDto.phone = phone;\n\n    this.clienteNewDto.cep = cep;\n    this.clienteNewDto.logradouro = logradouro;\n    this.clienteNewDto.numero = numero;\n    this.clienteNewDto.complemento = complemento;\n    this.clienteNewDto.bairro = bairro;\n    this.clienteNewDto.localidade = localidade;\n    this.clienteNewDto.uf = uf;\n\n    this.clienteService.insert(this.clienteNewDto)\n    .subscribe(response =>\n      {\n        this.emailNewAccount();\n      }, catchError=>\n      {\n        this.button = false;\n        this.sniper = null;\n        this.router.navigate(['/sigup']);\n      });\n  }\n\n  emailNewAccount() {\n    this.registroService.emailNewAccount(this.email)\n      .subscribe(response=>\n        {\n          this.successUpdate = \"ok\"; \n        },\n        catchError=>\n          {\n            this.button = false;\n            this.sniper = null;\n            this.successUpdate= null;\n            console.log(catchError);\n          });\n  }\n  \n  async errorCep() {\n    const alert = await this.alertController.create(\n      {\n        cssClass: 'registration-success',\n        subHeader: 'Endereço não encontrado !',\n        message: 'Tente digita manualmente. ',\n        buttons: [\n          {\n            text :'Continuar ',\n            cssClass: 'secondary',\n            handler: () =>\n            {\n              this.router.navigate(['/sigup']);\n            }\n          }\n        ]\n      }\n    )\n    await alert.present();\n  }\n\n}\n","export default \".content {\\n  --ion-background-color: rgb(243, 156, 231);\\n}\\n\\n.ion-padding-top {\\n  padding-top: 50 px;\\n}\\n\\n.ion-text-center {\\n  text-align: center;\\n}\\n\\n.ion-padding-top {\\n  padding-top: 50 px;\\n}\\n\\n.ion-padding {\\n  padding: 30px;\\n}\\n\\n.ion-text-uppercase {\\n  text-transform: uppercase;\\n}\\n\\nion-header {\\n  --ion-background-color: rgb(231, 163, 203);\\n}\\n\\nh5 {\\n  font-family: \\\"sans-serif\\\";\\n  font-size: medium;\\n  font-weight: bolder;\\n  font-style: italic;\\n  color: white;\\n  text-align: left;\\n}\\n\\nh4 {\\n  font-family: \\\"sans-serif\\\";\\n  text-align: center;\\n  font-size: small;\\n}\\n\\np {\\n  font-family: \\\"sans-serif\\\";\\n  font-style: italic;\\n  text-align: center;\\n  color: #e5ff00;\\n  font-size: small;\\n}\\n\\nion-buttons {\\n  color: white;\\n}\\n\\nion-input {\\n  font-family: \\\"sans-serif\\\";\\n  font-style: italic;\\n  text-align: center;\\n  color: white;\\n  font-size: small;\\n}\\n\\nion-button {\\n  color: #f0bfe9;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ3VwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDBDQUFBO0FBQ0Y7O0FBRUE7RUFDQSxrQkFBQTtBQUNBOztBQUVBO0VBQ0Esa0JBQUE7QUFDQTs7QUFFQTtFQUNFLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDQSxhQUFBO0FBQ0E7O0FBRUE7RUFDRSx5QkFBQTtBQUNGOztBQUVBO0VBQ0EsMENBQUE7QUFDQTs7QUFFQTtFQUNBLHlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBQ0E7O0FBRUE7RUFDRSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0EsWUFBQTtBQUNBOztBQUVBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FBQ0E7O0FBRUE7RUFDQSxjQUFBO0FBQ0EiLCJmaWxlIjoic2lndXAucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQzLCAxNTYsIDIzMSk7XG59IFxuXG4uaW9uLXBhZGRpbmctdG9wIHtcbnBhZGRpbmctdG9wOiA1MCBweDsgXG59XG5cbi5pb24tdGV4dC1jZW50ZXIge1xudGV4dC1hbGlnbjogY2VudGVyXG59XG5cbi5pb24tcGFkZGluZy10b3Age1xuICBwYWRkaW5nLXRvcDogNTAgcHg7IFxufVxuXG4uaW9uLXBhZGRpbmdcdHtcbnBhZGRpbmc6IDMwcHg7IFxufVxuXG4uaW9uLXRleHQtdXBwZXJjYXNlIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuaW9uLWhlYWRlciB7XG4tLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjMxLCAxNjMsIDIwMyk7XG59XG5cbmg1IHtcbmZvbnQtZmFtaWx5OiBcInNhbnMtc2VyaWZcIjtcbmZvbnQtc2l6ZTogbWVkaXVtO1xuZm9udC13ZWlnaHQ6IGJvbGRlcjtcbmZvbnQtc3R5bGU6IGl0YWxpYztcbmNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG50ZXh0LWFsaWduOiBsZWZ0OyBcbn1cblxuaDQge1xuICBmb250LWZhbWlseTogXCJzYW5zLXNlcmlmXCI7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiBzbWFsbDtcbn1cblxucCB7XG4gIGZvbnQtZmFtaWx5OiBcInNhbnMtc2VyaWZcIjtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiByZ2IoMjI5LCAyNTUsIDApO1xuICBmb250LXNpemU6IHNtYWxsO1xufVxuXG5pb24tYnV0dG9ucyB7XG5jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xufVxuXG5pb24taW5wdXQge1xuZm9udC1mYW1pbHk6IFwic2Fucy1zZXJpZlwiO1xuZm9udC1zdHlsZTogaXRhbGljO1xudGV4dC1hbGlnbjogY2VudGVyO1xuY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbmZvbnQtc2l6ZTogc21hbGw7XG59XG5cbmlvbi1idXR0b24ge1xuY29sb3I6IHJnYigyNDAsIDE5MSwgMjMzKTtcbn1cbiJdfQ== */\";","export default \"<ion-header *ngIf=\\\"!successUpdate\\\" >\\n  <ion-toolbar>\\n    <ion-title><h5>Finalize seu cadastro</h5></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-header *ngIf=\\\"successUpdate\\\" >\\n  <ion-toolbar>\\n    <ion-title><h5>Tudo certo</h5></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"successUpdate\\\" class=\\\"content\\\" [fullscreen]=\\\"true\\\">\\n  <div>\\n    <br>\\n    <br>\\n    <br>\\n    <br>\\n    <h4> Tudo certo, seu registro foi finalizado. </h4>\\n    <br>\\n    <br>\\n    <br>\\n    <ion-button [routerLink]=\\\"['/home']\\\" color=\\\"light\\\" expand=\\\"block\\\"> Continuar </ion-button>\\n  </div>\\n</ion-content >\\n\\n<ion-content *ngIf=\\\"!successUpdate\\\" class=\\\"content\\\" [fullscreen]=\\\"true\\\">\\n  <div id=\\\"container\\\">\\n    <br>\\n    <h5 class=\\\"ion-text-center\\\" >Passo 3 de 3</h5>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\" >Email</ion-label>\\n      <br>\\n      <ion-input type=\\\"text\\\" disabled> {{registro?.email}} </ion-input>\\n    </ion-item>\\n\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"submitForm()\\\">\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Nome completo</ion-label>\\n      <ion-input formControlName=\\\"name\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" maxlength=\\\"50\\\" type=\\\"text\\\" required></ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.name.dirty && formGroup.controls.name.errors\\\" margin-left>Obrigatório. </p>\\n    \\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">CPF</ion-label>\\n      <ion-input formControlName=\\\"cpf\\\" placeholder=\\\"ex:11122233344\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"11\\\" required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.cpf.dirty && formGroup.controls.cpf.errors\\\" margin-left>Informe um CPF valido. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Data de Nascimento</ion-label>\\n      <ion-input formControlName=\\\"dateNasc\\\" placeholder=\\\"ex:01022022\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"8\\\" required></ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.dateNasc.dirty && formGroup.controls.dateNasc.errors\\\" margin-left>Use somente números. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Celular</ion-label>\\n      <ion-input formControlName=\\\"phone\\\" placeholder=\\\"ex:91988776655\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"11\\\" required></ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.phone.dirty && formGroup.controls.phone.errors\\\" margin-left>Use somente números. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Cep</ion-label>\\n      <ion-input  formControlName=\\\"cep\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"8\\\" required ></ion-input>\\n    </ion-item>\\n    <ion-button *ngIf=\\\"formGroup.controls.cep.valid && formGroup.controls.cep.valid\\\" (click)=\\\"getEndereco()\\\" color=\\\"light\\\"expand=\\\"block\\\"> pesquisar ou digite manualmente</ion-button>\\n    <p *ngIf=\\\"formGroup.controls.cep.dirty && formGroup.controls.cep.errors\\\" margin-left>Use somente números. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Endereço</ion-label>\\n      <ion-input formControlName=\\\"logradouro\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" maxlength=\\\"50\\\" value='{{endereco?.logradouro}}' required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.logradouro.dirty && formGroup.controls.logradouro.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Numero</ion-label>\\n      <ion-input formControlName=\\\"numero\\\" inputmode=\\\"tel\\\" type=\\\"numeric\\\" maxlength=\\\"6\\\" required></ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.numero.dirty && formGroup.controls.numero.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Complemento</ion-label>\\n      <ion-input formControlName=\\\"complemento\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" maxlength=\\\"50\\\" value='{{endereco?.complemento}}' required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.complemento.dirty && formGroup.controls.complemento.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Bairro</ion-label>\\n      <ion-input formControlName=\\\"bairro\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" maxlength=\\\"50\\\" value='{{endereco?.bairro}}' required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.bairro.dirty && formGroup.controls.bairro.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Cidade</ion-label>\\n      <ion-input formControlName=\\\"localidade\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" maxlength=\\\"50\\\" value='{{endereco?.localidade}}' required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.localidade.dirty && formGroup.controls.localidade.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-item lines=\\\"full\\\">\\n      <ion-label class=\\\"ion-text-center\\\" position=\\\"floating\\\">Estado</ion-label>\\n      <ion-input formControlName=\\\"uf\\\" class=\\\"ion-text-uppercase\\\" inputmode=\\\"text\\\" type=\\\"text\\\" maxlength=\\\"2\\\" value='{{endereco?.uf}}' required> </ion-input>\\n    </ion-item>\\n    <p *ngIf=\\\"formGroup.controls.uf.dirty && formGroup.controls.uf.errors\\\" margin-left>Obrigatório. </p>\\n\\n    <ion-row>\\n      <ion-col>\\n        <ion-button disabled = \\\"{{button}}\\\" *ngIf=\\\"formGroup.valid\\\" type=\\\"submit\\\" color=\\\"light\\\" expand=\\\"block\\\">\\n          <ion-spinner *ngIf=\\\"sniper\\\" color=\\\"secondary\\\" > </ion-spinner>\\n            <h4 *ngIf=\\\"sniper\\\"> aguarde ... </h4>\\n            <h4 *ngIf=\\\"!sniper\\\"> Cadastrar </h4>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </form>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button disabled = \\\"{{button}}\\\" [routerLink]=\\\"['/home']\\\" color=\\\"light\\\" expand=\\\"block\\\">Cancelar</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  </div>\\n</ion-content>\\n\";"]}