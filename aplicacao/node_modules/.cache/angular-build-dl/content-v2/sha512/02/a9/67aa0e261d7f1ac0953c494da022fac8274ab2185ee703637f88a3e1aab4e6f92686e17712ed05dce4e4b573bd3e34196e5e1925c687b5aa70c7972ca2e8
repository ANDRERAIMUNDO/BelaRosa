{"version":3,"sources":["webpack:///src/app/pages/profile/profile-routing.module.ts","webpack:///src/app/pages/profile/profile.module.ts","webpack:///src/app/pages/profile/profile.page.ts","webpack:///src/app/pages/profile/profile.page.scss","webpack:///src/app/pages/profile/profile.page.html"],"names":["routes","path","component","ProfilePage","loadChildren","then","m","ProfilePhotoPageModule","ProfilePageRoutingModule","NgModule","imports","RouterModule","exports","ProfilePageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","ExploreContainerComponentModule","declarations","storageService","registroService","clienteService","enderecoService","pedidoService","loadingController","alertController","formBuilder","route","router","animation","id","senha","phone","getMyData","formRegistroEmail","formRegistroEmailConfirm","formRegistroPassword","formRegistroPasswordConfirm","formCliente","formAddress","localUser","getLocalUser","email","findByEmail","subscribe","response","registro","cliente","getImageIfExists","getEndereco","sliceTypeCliente","catchError","status","navigate","phoneSlice","area","slice","num","DateSlice","dateNasc","dia","mes","ano","CPFSlice","cpf","firstDigits","secundDigits","thirdDigist","lastDigits","getImageFromBucket","imageUrl","API_CONFIG","console","log","findById","endereco","formGroupRegistroEmailConfirm","group","emailConfirm","Validators","snapshot","params","formGroupRegistroEmail","registroform","checkEmail","checkEmailValue","update","loandRegistro","formGroupRegistroPasswordConfirm","passwordConfirm","formGroupRegistroPassword","password","show","hide","setTimeout","checkPassword","checkPasswordValue","updatePassword","formGroupCliente","clienteform","loandCliente","erroSuccess","formGroupAddress","cep","logradouro","numero","complemento","bairro","localidade","uf","addressform","updateRegistroValue","updateClienteValue","updateAddressValue","get","value","presentEmailConfirm","presentErrorPasswordConfirm","viaCep","presentEnderecoConfirm","RegistropresentLoading","findEmailUpdateDates","create","message","keyboardClose","spinner","animated","duration","loading","present","onDidDismiss","role","data","updateRegistroSuccess","cssClass","header","subHeader","buttons","text","handler","alert","ClientepresentLoading","updateClienteSuccess","EnderecopresentLoading","updateEnderecoSuccess","StorageService","RegistroService","ClienteService","EnderecoService","PedidoService","LoadingController","AlertController","FormBuilder","ActivatedRoute","Router","Component","selector","template"],"mappings":"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","file":"src_app_pages_profile_profile_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  },\n  {\n    path: 'profile-photo',\n    loadChildren: () => import('../profile-photo/profile-photo.module').then( m => m.ProfilePhotoPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ProfilePageRoutingModule,\n    ExploreContainerComponentModule,\n    ExploreContainerComponentModule\n\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, LoadingController } from '@ionic/angular';\nimport { catchError } from 'rxjs/operators';\nimport { API_CONFIG } from 'src/config/config';\nimport { ClienteDTO } from '../../models/cliente.dto';\nimport { Endereco } from '../../models/endereco';\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { ProdutoDTO } from '../../models/produto.dto';\nimport { RegistroDTO } from '../../models/registro.dto';\nimport { ClienteService } from '../../services/cliente.service';\nimport { EnderecoService } from '../../services/endereco.service';\nimport { PedidoService } from '../../services/pedido.service';\nimport { RegistroService } from '../../services/registro.service';\nimport { StorageService } from '../../services/storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage {\n\n  animation = true;\n  registro : RegistroDTO;\n  id: String = \"\";\n  senha: string = \"password\";      \n  cliente : ClienteDTO;\n  endereco: Endereco;\n  updateRegistroValue: boolean;\n  updateClienteValue: boolean;\n  updateAddressValue: boolean;\n  checkEmailValue: boolean;\n  checkPasswordValue: boolean;\n  formGroupRegistroEmail: FormGroup;\n  formGroupRegistroEmailConfirm: FormGroup;\n  formGroupRegistroPassword: FormGroup;\n  formGroupRegistroPasswordConfirm: FormGroup;\n  formGroupCliente: FormGroup;\n  formGroupAddress: FormGroup;\n  email: string;\n  emailConfirm: string;\n  password: string;\n  passwordConfirm: string;\n  phone: String = \"\";\n  cep: string;\n  phoneSlice: string;\n  area : string;\n  num : string;\n  DateSlice: string;\n  dia: string;\n  ano: string;\n  mes: string;\n  CPFSlice: string;\n  firstDigits: string;\n  secundDigits: string;\n  thirdDigist: string;\n  lastDigits: string;\n \n  constructor( public storageService:  StorageService,\n               public registroService: RegistroService,\n               public clienteService: ClienteService,\n               public enderecoService: EnderecoService,\n               public pedidoService: PedidoService,\n               public loadingController: LoadingController,\n               public alertController : AlertController,\n               public formBuilder: FormBuilder,\n               public route: ActivatedRoute,\n               public router: Router) { }\n\n  ionViewWillEnter() {\n    this.getMyData();\n    this.formRegistroEmail();\n    this.formRegistroEmailConfirm();\n    this.formRegistroPassword();\n    this.formRegistroPasswordConfirm();\n    this.formCliente();\n    this.formAddress();\n  }\n\n  getMyData(){\n    let localUser = this.storageService.getLocalUser();\n    if (localUser && localUser.email)\n    {\n      this.registroService.findByEmail(localUser.email)\n      .subscribe(response=>\n        {\n          this.registro = response as RegistroDTO;\n          this.cliente = response as ClienteDTO;\n          this.getImageIfExists();\n          this.getEndereco();\n          this.sliceTypeCliente();\n        },\n       catchError =>\n       {\n         if (catchError.status == 403)\n         {\n           this.router.navigate(['/home']);\n         }\n       });\n    }\n  }\n\n  sliceTypeCliente() {\n    this.email= this.registro.email;\n    this.phoneSlice = this.registro.cliente.phone;\n    this.area = this.phoneSlice.slice(0,2);\n    this.num = this.phoneSlice.slice(2,11);\n    this.DateSlice = this.registro.cliente.dateNasc;\n    this.dia = this.DateSlice.slice(0,2);  \n    this.mes = this.DateSlice.slice(2,4);\n    this.ano = this.DateSlice.slice(4,8);\n    this.CPFSlice = this.registro.cliente.cpf;\n    this.firstDigits = this.CPFSlice.slice(0,3);\n    this.secundDigits = this.CPFSlice.slice(3,6);\n    this.thirdDigist = this.CPFSlice.slice(6,9);\n    this.lastDigits = this.CPFSlice.slice(9,11);\n  }\n\n  getImageIfExists(){\n    this.registroService.getImageFromBucket(this.registro.id)\n    .subscribe(response =>\n      {\n        this.registro.imageUrl = `${API_CONFIG.bukectBaseUrl}/profiles/cp${this.registro.id}.png`;\n        },\n        catchError=>{console.log(catchError)});\n      }\n  \n  getEndereco(){\n    this.enderecoService.findById(this.registro.id)\n      .subscribe(response=>\n        {\n          this.endereco = response as Endereco;\n        },\n         catchError =>\n         {\n           if (catchError.status == 403)\n           {  \n             this.router.navigate(['/address']);\n           }\n         }\n        );  \n      }\n\n  formRegistroEmailConfirm() {\n    this.formGroupRegistroEmailConfirm = this.formBuilder.group(\n      {\n       emailConfirm: ['', Validators.email],\n       });\n      }\n\n  formRegistroEmail() {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupRegistroEmail = this.formBuilder.group(\n      {\n        email: ['', Validators.email],\n      });\n    }\n  \n  updateRegistroEmailForm(registroform: NgForm) {\n    this.checkEmail();\n    if (this.checkEmailValue == true) \n    {\n      this.registroService.update(this.registro.id, registroform)\n      .subscribe(response=>\n        {\n          this.loandRegistro();\n        });\n    }\n    }\n\n  formRegistroPasswordConfirm() {\n    this.formGroupRegistroPasswordConfirm = this.formBuilder.group(\n      {\n        passwordConfirm: ['', Validators.minLength(5)]\n      });\n  }\n\n  formRegistroPassword() {\n    this.formGroupRegistroPassword = this.formBuilder.group(\n      {\n      password: ['', Validators.minLength(5)]\n    });\n  }\n\n  showPassword () {\n    let show = \"text\"\n    let hide = \"password\"\n    this.senha = show;\n    setTimeout(() => {\n      this.senha = hide;\n    }, 3000);\n  }\n\n  updateRegistroPasswordForm(registroform: NgForm) {\n    this.checkPassword();\n    if (this.checkPasswordValue ==true)\n    {\n      this.registroService.updatePassword(this.registro.id, registroform)\n      .subscribe(response=>\n        {\n          this.loandRegistro();\n        });\n    }\n    }\n\n  formCliente () {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupCliente =  this.formBuilder.group(\n    {\n      phone: [null,[Validators.required, Validators.minLength(11)]]\n    });\n  }\n\n  updateClienteForm(clienteform: NgForm) {\n   this.clienteService.update(this.cliente.id,clienteform)\n   .subscribe(response =>\n      {\n        this.loandCliente();\n      }, catchError=>\n      {\n        this.erroSuccess();\n        this.router.navigate(['/dashboard/profile']);\n      });\n    }\n\n  formAddress () {\n    this.id  = this.route.snapshot.params['id'];\n    this.formGroupAddress =  this.formBuilder.group(\n      {\n        cep: ['', [Validators.required]],\n        logradouro: ['',[Validators.required]],  \n        numero: ['', [Validators.required]],\n        complemento: ['', [Validators.required]],\n        bairro: ['', [Validators.required]],\n        localidade:['', [Validators.required]],\n        uf: ['', [Validators.required]],\n      });\n  }\n\n  updateAddressForm(addressform: NgForm) {\n    this.enderecoService.update(this.registro.id, addressform)\n    .subscribe(response =>\n       {\n         this.loandCliente();\n       }, catchError=>\n       {\n         this.erroSuccess();\n         this.router.navigate(['/dashboard/profile']);\n       });\n  }\n\n  updateOnRegistro() {\n    this.updateRegistroValue = true;\n  }\n\n  updateOnCliente() {\n    this.updateClienteValue = true;\n  }\n\n  updateOnAddress() {\n    this.updateAddressValue = true;\n  }\n\n  checkEmail() {\n    this.email = this.formGroupRegistroEmail.get('email').value;\n    this.emailConfirm = this.formGroupRegistroEmailConfirm.get('emailConfirm').value;\n    let email = this.email;\n    let emailConfirm = this.emailConfirm;\n    if (email == emailConfirm) \n    {\n      this.checkEmailValue = true;\n    }\n    else \n    {\n     this.presentEmailConfirm();\n    }\n  }\n\n  checkPassword() {\n    this.password = this.formGroupRegistroPassword.get('password').value;\n    this.passwordConfirm = this.formGroupRegistroPasswordConfirm.get('passwordConfirm').value;\n    let password = this.password;\n    let passwordConfirm = this.passwordConfirm;\n    if (password == passwordConfirm) \n    {\n      this.checkPasswordValue = true;\n    }\n    else \n    {\n     this.presentErrorPasswordConfirm();\n    }\n  }\n\n  getViaCep(){\n    let cep = this.formGroupAddress.get('cep').value;\n    this.clienteService.viaCep(cep)\n    .subscribe(response=>\n      {\n        this.endereco = response;\n      },\n      catchError=>\n        {\n          this.presentEnderecoConfirm();\n        }\n      );\n  }\n\n  loandRegistro(){\n    this.RegistropresentLoading();\n    this.registroService.findEmailUpdateDates(this.email)\n    .subscribe(response=>\n      {\n        console.log(\"uploand...\"); \n      },\n      catchError=>\n        {\n          console.log(catchError);\n          this.router.navigate(['/dashboard/profile']);\n        });\n  }\n\n  async RegistropresentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Atualizando suas informações ...',\n      keyboardClose: true,\n      spinner:\"lines-small\",\n      animated: true,\n      duration: 5000,\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    this.updateRegistroSuccess();\n  }\n\n  async updateRegistroSuccess () {\n    const alert = await this.alertController.create(\n      {\n        cssClass: 'registration-success',\n        header: 'Ok',\n        subHeader: 'Tudo certo!',\n        message: 'Suas informações foram atualizadas, por favor entre novamente. ',\n        buttons: [\n          {\n            text :'Clique aqui',\n            cssClass: 'secondary',\n            handler: () =>\n            {\n              this.router.navigate(['/home']);\n            }\n          }\n        ]\n      }\n    )\n    await alert.present();\n  }\n\n  loandCliente(){\n    this.ClientepresentLoading();\n    this.registroService.findEmailUpdateDates(this.email)\n    .subscribe(response=>\n      {\n        console.log(\"uploand...\"); \n      },\n      catchError=>\n        {\n          console.log(catchError);\n          this.router.navigate(['/dashboard/circle-upload-image']);\n        });\n  }\n\n  async ClientepresentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Atualizando suas informações ...',\n      keyboardClose: true,\n      spinner:\"lines-small\",\n      animated: true,\n      duration: 2000,\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    this.updateClienteSuccess();\n  }\n\n  async updateClienteSuccess () {\n    const alert = await this.alertController.create(\n      {\n        cssClass: 'registration-success',\n        header: 'Ok',\n        subHeader: 'Tudo certo!',\n        message: 'Suas informações foram atualizadas.',\n        buttons: [\n          {\n            text :'Clique aqui',\n            cssClass: 'secondary',\n            handler: () =>\n            {\n              this.router.navigate(['/dashboard/circle-upload-image']);\n            }\n          }\n        ]\n      }\n    )\n    await alert.present();\n  }\n\n\n  loandEndereco(){\n    this.EnderecopresentLoading();\n    this.registroService.findEmailUpdateDates(this.email)\n    .subscribe(response=>\n      {\n        console.log(\"uploand...\"); \n      },\n      catchError=>\n        {\n          console.log(catchError);\n          this.router.navigate(['/dashboard/circle-upload-image']);\n        });\n  }\n\n  async EnderecopresentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Atualizando suas informações ...',\n      keyboardClose: true,\n      spinner:\"lines-small\",\n      animated: true,\n      duration: 2000,\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    this.updateEnderecoSuccess();\n  }\n\n  async updateEnderecoSuccess () {\n    const alert = await this.alertController.create(\n      {\n        cssClass: 'registration-success',\n        header: 'Ok',\n        subHeader: 'Tudo certo!',\n        message: 'Suas informações foram atualizadas.',\n        buttons: [\n          {\n            text :'Clique aqui',\n            cssClass: 'secondary',\n            handler: () =>\n            {\n              this.router.navigate(['/dashboard/circle-upload-image']);\n            }\n          }\n        ]\n      }\n    )\n    await alert.present();\n  }\n\n  async erroSuccess () {\n    const alert = await this.alertController.create(\n      {\n        cssClass: 'registration-success',\n        header: 'Ok',\n        subHeader: 'Pacere que algo deu errado!',\n        message: 'Suas informações não foram atualizadas, tente mais tarde.',\n        buttons: [\n          {\n            text :'Clique aqui',\n            cssClass: 'secondary',\n            handler: () =>\n            {\n              this.router.navigate(['/dashboard/circle-upload-image']);\n            }\n          }\n        ]\n      }\n    )\n    await alert.present();\n  }\n\n  async presentEmailConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Atenção!',\n      subHeader: 'Voce digitou dois emails direfentes',\n      message: 'Antes de confirmar verifique se os email estão iguais.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentErrorPasswordConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Atenção!',\n      subHeader: 'Voce digitou senhas direfentes',\n      message: 'Antes de confirmar verifique se as senhas estão iguais.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentEnderecoConfirm() {\n    const alert = await this.alertController.create({\n      header: 'Atenção!',\n      subHeader: 'Não encontramos o cep que voce colocou',\n      message: 'Caso erro continue insira os dados manualmente.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n\n  reload() {\n    this.router.navigate(['/dashboard/circle-reload']);\n  }\n\n  ShowPedidos() {\n    this.router.navigate(['/dashboard/pedidos']);\n  }\n\n}\n  ","export default \"#container {\\n  text-align: center;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n}\\n\\n#container-button {\\n  text-align: left;\\n  position: absolute;\\n  right: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  color: #f39ce7;\\n}\\n\\n#imagem-visao {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\nion-header {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: x-small;\\n  color: #080808;\\n  text-align: length;\\n  --ion-background-color: rgb(240, 191, 233);\\n}\\n\\ndiv {\\n  text-align: center;\\n}\\n\\n#container ion-card {\\n  width: auto;\\n  height: auto;\\n}\\n\\nion-card-title {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  color: #080808;\\n  text-align: center;\\n  width: 75;\\n  height: 75;\\n}\\n\\nion-avatar {\\n  left: auto;\\n  right: auto;\\n}\\n\\nion-img {\\n  width: auto;\\n  height: auto;\\n}\\n\\nion-card-title {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: smaller;\\n  color: #080808;\\n  text-align: center;\\n}\\n\\nion-header {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: x-small;\\n  color: #080808;\\n  text-align: center;\\n  --ion-background-color: rgb(240, 191, 233);\\n}\\n\\nion-content {\\n  --ion-background-color: rgb(252, 239, 250);\\n}\\n\\nh6 {\\n  font-family: \\\"Lucida Sans Regular\\\";\\n  font-size: small;\\n  text-align: center;\\n  -moz-text-align-last: center;\\n       text-align-last: center;\\n  color: #0f0f0f;\\n}\\n\\nh5 {\\n  color: #f063db;\\n}\\n\\nion-icon {\\n  width: 20px;\\n  height: 20px;\\n}\\n\\nion-button {\\n  color: #f0bfe9;\\n}\\n\\n.ion-text-uppercase {\\n  text-transform: uppercase;\\n}\\n\\nion-input {\\n  font-size: small;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLE9BQUE7RUFDQSxRQUFBO0VBQ0EsUUFBQTtFQUNBLDJCQUFBO0FBQ0o7O0FBRUU7RUFDRSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFFBQUE7RUFDQSwyQkFBQTtFQUNBLGNBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBRUU7RUFDRSxrQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7QUFDSjs7QUFFRTtFQUNFLGtCQUFBO0FBQ0o7O0FBRUU7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUNKOztBQUdFO0VBQ0Usa0NBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0FBQUo7O0FBR0U7RUFFRSxVQUFBO0VBQ0EsV0FBQTtBQURKOztBQUlFO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFETjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7QUFESjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQ0FBQTtBQURKOztBQUlFO0VBQ0UsMENBQUE7QUFESjs7QUFJRTtFQUNFLGtDQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLDRCQUFBO09BQUEsdUJBQUE7RUFDQSxjQUFBO0FBREo7O0FBR0U7RUFDRSxjQUFBO0FBQUo7O0FBR0U7RUFDRSxXQUFBO0VBQ0EsWUFBQTtBQUFKOztBQUdFO0VBQ0UsY0FBQTtBQUFKOztBQUdFO0VBQ0UseUJBQUE7QUFBSjs7QUFHRztFQUNDLGdCQUFBO0FBQUoiLCJmaWxlIjoicHJvZmlsZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgICNjb250YWluZXIge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIH1cblxuICAjY29udGFpbmVyLWJ1dHRvbiB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGNvbG9yOiByZ2IoMjQzLCAxNTYsIDIzMSk7XG4gIH1cbiAgXG4gICNpbWFnZW0tdmlzYW8ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgfVxuXG4gIGlvbi1oZWFkZXIge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHgtc21hbGw7XG4gICAgY29sb3I6IHJnYig4LCA4LCA4KTtcbiAgICB0ZXh0LWFsaWduOiBsZW5ndGg7IFxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNDAsIDE5MSwgMjMzKTtcbiAgfVxuICBcbiAgZGl2IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbiAgXG4gICNjb250YWluZXIgaW9uLWNhcmQgIHtcbiAgICB3aWR0aDogYXV0bzsgXG4gICAgaGVpZ2h0OiBhdXRvO1xuICBcbiAgfVxuICBcbiAgaW9uLWNhcmQtdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHNtYWxsO1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICB3aWR0aDogNzU7IFxuICAgIGhlaWdodDogNzU7XG4gICAgfVxuICBcbiAgaW9uLWF2YXRhciB7XG4gICAgLy9wb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogYXV0bztcbiAgfVxuXG4gIGlvbi1pbWcgeyBcbiAgICAgIHdpZHRoOiBhdXRvOyBcbiAgICAgIGhlaWdodDogYXV0bztcbiAgfVxuICBcbiAgaW9uLWNhcmQtdGl0bGUge1xuICAgIGZvbnQtZmFtaWx5OidMdWNpZGEgU2FucyBSZWd1bGFyJztcbiAgICBmb250LXNpemU6IHNtYWxsZXI7XG4gICAgY29sb3I6IHJnYig4LCA4LCA4KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IFxuICB9XG4gIFxuICBpb24taGVhZGVyIHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiB4LXNtYWxsO1xuICAgIGNvbG9yOiByZ2IoOCwgOCwgOCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyBcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAxOTEsIDIzMyk7XG4gIH1cbiAgXG4gIGlvbi1jb250ZW50IHsgIFxuICAgIC0taW9uLWJhY2tncm91bmQtY29sb3I6IHJnYigyNTIsIDIzOSwgMjUwKTtcbiAgfSBcbiAgXG4gIGg2IHtcbiAgICBmb250LWZhbWlseTonTHVjaWRhIFNhbnMgUmVndWxhcic7XG4gICAgZm9udC1zaXplOiBzbWFsbDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1hbGlnbi1sYXN0OiBjZW50ZXI7IFxuICAgIGNvbG9yOiByZ2IoMTUsIDE1LCAxNSk7XG4gIH1cbiAgaDUge1xuICAgIGNvbG9yOiAgcmdiKDI0MCwgOTksIDIxOSk7XG4gIH1cbiAgXG4gIGlvbi1pY29uIHtcbiAgICB3aWR0aDogMjBweDsgXG4gICAgaGVpZ2h0OiAyMHB4O1xuICB9XG4gIFxuICBpb24tYnV0dG9uIHtcbiAgICBjb2xvcjogcmdiKDI0MCwgMTkxLCAyMzMpO1xuICB9XG5cbiAgLmlvbi10ZXh0LXVwcGVyY2FzZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuXG4gICBpb24taW5wdXQge1xuICAgIGZvbnQtc2l6ZTogc21hbGw7XG4gIH0iXX0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-avatar slot=\\\"end\\\">\\n        <img [src]=\\\"registro?.imageUrl || '../../assets/person.svg'\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <h3>{{registro?.cliente?.name}}</h3>\\n        <p>{{dia}}/{{mes}}/{{ano}}</p>\\n        <p>{{registro?.email}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  \\n  <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label>\\n        <h3>Nome: {{registro?.cliente?.name}}</h3>\\n        <h3>Contato: ({{area}}) {{num}}</h3>\\n        <p>Data de Nascimento: {{dia}}/{{mes}}/{{ano}}</p>\\n        <p>CPF: {{firstDigits}}.{{secundDigits}}.{{thirdDigist}}-{{lastDigits}}</p>\\n        <p>Email: {{registro?.email}}</p>\\n        <ion-button color=\\\"light\\\" (click)=\\\"updateOnCliente()\\\">Informações pessoais</ion-button>\\n      </ion-label>\\n      <ion-thumbnail>\\n      <img [src]=\\\"registro?.imageUrl || '../../assets/person.svg'\\\">\\n      </ion-thumbnail>\\n    </ion-item>\\n    <ion-button color=\\\"light\\\" (click)=\\\"updateOnRegistro()\\\">Atualização segurança</ion-button>\\n  </div>\\n  <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n    <ion-label>\\n      <p>Carregar imagem perfil</p>\\n      <ion-button [routerLink]=\\\"['./profile-photo']\\\" color=\\\"light\\\">Enviar imagem</ion-button>\\n    </ion-label>\\n    <ion-item>\\n      <ion-label>\\n        <h3>Endereço: {{endereco?.logradouro}}, {{endereco?.numero}}</h3>\\n        <h3>{{endereco?.complemento}} {{endereco?.bairro}} CEP {{endereco?.cep}}</h3>\\n        <p>Cidade: {{endereco?.localidade}}, {{endereco?.uf}}</p>\\n        <ion-button color=\\\"light\\\" (click)=\\\"updateOnAddress()\\\">Atualizar endereco</ion-button>\\n      </ion-label>\\n    </ion-item>\\n  </div>\\n   <!--updateCliente-->\\n   <div *ngIf=\\\"updateClienteValue == true\\\">\\n    <form [formGroup]=\\\"formGroupCliente\\\" (ngSubmit)=\\\"updateClienteForm(formGroupCliente.value)\\\">\\n      <ion-list>\\n      <!--Nome-->\\n      <ion-label>\\n        <h5>Cliente</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" class=\\\"ion-text-uppercase\\\" disabled>{{registro?.cliente?.name}}</ion-input>\\n      </ion-item>\\n      <!--cpf-->\\n      <ion-label>\\n        <h5>CPF</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input type=\\\"text\\\" disabled>{{firstDigits}}.{{secundDigits}}.{{thirdDigist}}-{{lastDigits}}</ion-input>\\n      </ion-item>\\n      <!--data de nascimento-->\\n      <ion-label>\\n        <h5>Data de Nascimento</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input disabled>{{dia}}/{{mes}}/{{ano}}</ion-input>\\n      </ion-item>\\n      <!--telefone-->\\n      <ion-label>\\n        <h5>Celular</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName =\\\"phone\\\" placeholder=\\\"({{area}}) {{num}}\\\" maxlength=\\\"11\\\" inputmode=\\\"numeric\\\" type=\\\"tel\\\" clear-input required></ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupCliente.controls.phone.dirty && formGroupCliente.controls.phone.errors\\\" margin-left>Digite o número do celular.</p>\\n    </ion-list>\\n    <ion-button [disabled]=\\\"formGroupCliente.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">Alterar informações</ion-button>\\n    </form>\\n    <ion-button [disabled]=\\\"formGroupCliente.valid\\\" type=\\\"submit\\\" color=\\\"light\\\" (click)=\\\"reload()\\\">Cancelar</ion-button>\\n   </div>\\n    <!--update Addrress-->\\n  <div *ngIf=\\\"updateAddressValue == true\\\">\\n      <form [formGroup]=\\\"formGroupAddress\\\" (ngSubmit)=\\\"updateAddressForm(formGroupAddress.value)\\\">\\n      <ion-list>\\n        <ion-label>\\n          <h5>Cep</h5>\\n        </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"cep\\\" placeholder=\\\"{{endereco?.cep}}\\\" type=\\\"number\\\" required ></ion-input>\\n      </ion-item>\\n      <p>Digite ou insira seu endereço nanualmente <ion-button color=\\\"light\\\" (click)=\\\"getViaCep()\\\">buscar</ion-button></p>\\n      <p *ngIf=\\\"formGroupAddress.controls.cep.dirty && formGroupAddress.controls.cep.errors\\\" margin-left>Digite um cep valido. </p>\\n      <!--logradouro-->\\n      <ion-label>\\n      <h5>Endereço</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"logradouro\\\"  placeholder=\\\"{{endereco?.logradouro}}\\\" type=\\\"text\\\" value='{{endereco?.logradouro}}' required> </ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.logradouro.dirty && formGroupAddress.controls.logradouro.errors\\\" margin-left>Obrigatório. </p>\\n      <!--numero-->\\n      <ion-label>\\n        <h5>Número</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"numero\\\"  placeholder=\\\"{{endereco?.numero}}\\\" type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.numero.dirty && formGroupAddress.controls.numero.errors\\\" margin-left>Obrigatório. </p>\\n      <!--complemento-->\\n      <ion-label>\\n        <h5>Complemento</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"complemento\\\" placeholder=\\\"{{endereco?.complemento}}\\\" type=\\\"text\\\" value='{{endereco?.complemento}}' required> </ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.complemento.dirty && formGroupAddress.controls.complemento.errors\\\" margin-left>Obrigatório. </p>\\n      <!--bairro-->\\n      <ion-label>\\n        <h5>Bairro</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"bairro\\\"  placeholder=\\\"{{endereco?.bairro}}\\\" type=\\\"text\\\" value='{{endereco?.bairro}}' required> </ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.bairro.dirty && formGroupAddress.controls.bairro.errors\\\" margin-left>Obrigatório. </p>\\n       <!--localidade-->\\n       <ion-label>\\n        <h5>Cidade</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"localidade\\\"  placeholder=\\\"{{endereco?.localidade}}\\\" type=\\\"text\\\" value='{{endereco?.localidade}}' required> </ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.localidade.dirty && formGroupAddress.controls.localidade.errors\\\" margin-left>Obrigatório. </p>\\n      <!--uf-->\\n      <ion-label>\\n        <h5>Estado</h5>\\n      </ion-label>\\n      <ion-item>\\n        <ion-input formControlName=\\\"uf\\\"  placeholder=\\\"{{endereco?.uf}}\\\" type=\\\"text\\\" value='{{endereco?.uf}}' required> </ion-input>\\n      </ion-item>\\n      <p *ngIf=\\\"formGroupAddress.controls.uf.dirty && formGroupAddress.controls.uf.errors\\\" margin-left>Obrigatório. </p>\\n      <ion-button [disabled]=\\\"formGroupAddress.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">Alterar informações pessoais</ion-button>\\n    </ion-list>\\n    </form>\\n    <ion-button type=\\\"submit\\\" color=\\\"light\\\" (click)=\\\"reload()\\\">Cancelar</ion-button>\\n  </div>\\n   <!--update Registro-->\\n  <div *ngIf=\\\"updateRegistroValue == true\\\">\\n     <!--atualizacao de email-->\\n    <form [formGroup]=\\\"formGroupRegistroEmailConfirm\\\">\\n      <ion-list>\\n        <!--emailConfirm-->\\n        <ion-label>\\n          <h5>Email</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"emailConfirm\\\" class=\\\"email\\\" placeholder=\\\"{{email}}\\\" type=\\\"email\\\" required></ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupRegistroEmailConfirm.controls.emailConfirm.dirty && formGroupRegistroEmailConfirm.controls.emailConfirm.errors\\\" margin-left>Email invalido. </p>\\n      </ion-list>\\n    </form>\\n    <form [formGroup]=\\\"formGroupRegistroEmail\\\" (ngSubmit)=\\\"updateRegistroEmailForm(formGroupRegistroEmail.value)\\\">\\n      <ion-list>\\n        <!--email-->\\n        <ion-label>\\n          <h5>Confirmar novo Email</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"email\\\" class=\\\"email\\\" placeholder=\\\"{{email}}\\\" type=\\\"email\\\" required></ion-input>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupRegistroEmail.controls.email.dirty && formGroupRegistroEmail.controls.email.errors\\\" margin-left>Email invalido. </p>\\n    <ion-button [disabled]=\\\"formGroupRegistroEmail.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">Alterar informações</ion-button>\\n      </ion-list>\\n    </form>\\n    <!--atualizacao de senha-->\\n    <form [formGroup]=\\\"formGroupRegistroPasswordConfirm\\\">\\n      <ion-list>\\n        <!--password Confirm-->\\n        <ion-label>\\n          <h5>Criar nova senha</h5>\\n          </ion-label>\\n          <ion-item>\\n           <ion-input formControlName=\\\"passwordConfirm\\\" placeholder=\\\"*************\\\" type={{senha}} required ></ion-input>\\n\\n           <ion-button id=\\\"container-button\\\" color=\\\"light\\\" fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"showPassword()\\\">\\n            <img id=\\\"imagem-visao\\\" src=\\\"../../assets/visao.png\\\"/>\\n         </ion-button>\\n          </ion-item>\\n          <p *ngIf=\\\"formGroupRegistroPasswordConfirm.controls.passwordConfirm.dirty && formGroupRegistroPasswordConfirm.controls.passwordConfirm.errors\\\" margin-left>Senha não atende os requisitos minimos.</p>\\n      </ion-list>\\n    </form>\\n    <form [formGroup]=\\\"formGroupRegistroPassword\\\" (ngSubmit)=\\\"updateRegistroPasswordForm(formGroupRegistroPassword.value)\\\">\\n      <ion-list>\\n         <!--password-->\\n         <ion-label>\\n          <h5>Repetir nova senha</h5>\\n        </ion-label>\\n        <ion-item>\\n          <ion-input formControlName=\\\"password\\\" placeholder=\\\"*************\\\" type={{senha}} required ></ion-input>\\n\\n          <ion-button id=\\\"container-button\\\" color=\\\"light\\\" fill=\\\"clear\\\" slot=\\\"end\\\" (click)=\\\"showPassword()\\\">\\n            <img id=\\\"imagem-visao\\\" src=\\\"../../assets/visao.png\\\"/>\\n         </ion-button>\\n        </ion-item>\\n        <p *ngIf=\\\"formGroupRegistroPassword.controls.password.dirty && formGroupRegistroPassword.controls.password.errors\\\" margin-left>Senha não atende os requisitos minimos.</p>\\n        <ion-button [disabled]=\\\"formGroupRegistroPassword.invalid\\\" type=\\\"submit\\\" color=\\\"light\\\">Alterar informações</ion-button>\\n      </ion-list>\\n    </form>\\n    <ion-button [disabled]=\\\"formGroupRegistroEmail.valid ||formGroupRegistroPassword.valid\\\" (click)=\\\"reload()\\\"type=\\\"submit\\\" color=\\\"light\\\">Cancelar</ion-button>\\n  </div>\\n  <div *ngIf=\\\"updateRegistroValue == boolean  && updateClienteValue==boolean && updateAddressValue == boolean\\\">\\n    <h4 slot=\\\"start\\\">Meus pedidos</h4>\\n    <ion-button (click)=\\\"ShowPedidos()\\\" color=\\\"light\\\">Lista completa</ion-button>\\n  </div>\\n<app-explore-container> </app-explore-container>\\n</ion-content>\\n\\n\\n\\n\\n\";"]}